{
  "Header": {
    "title": "seongyeol",
    "loading": "Loading...",
    "developer": "Developer #{number}",
    "logout": "Logout",
    "login": "Login",
    "changeLocale": "Change locale"
  },
  "LocaleSwitcher": {
    "label": "Language",
    "locale": "{locale}"
  },
  "TableOfContents": {
    "title": "Table of Contents"
  },
  "Footer": {
    "title": "seongyeol",
    "copyright": "¬© {year} All rights reserved.",
    "navigation": "Navigation",
    "home": "Home",
    "works": "Works",
    "blog": "Blog",
    "connect": "Connect",
    "email": "Email"
  },
  "HomePage": {
    "bio": "Hi thereüëã I'm Seongyeol, a developer based in South Korea. I worked as a frontend developer on the renewal project for the <snuLink>website of Seoul National University's Computer Science and Engineering department</snuLink>. I'm now working at <kakaoLink>Kakao</kakaoLink>, a Korean tech company known for services like KakaoTalk, Korea's most widely used messaging app. I also share developer content on <instagramLink>Instagram</instagramLink>.",
    "posts": "Posts",
    "series": "Series",
    "curriculum": "Learn CS By Building a Computer",
    "curriculumDescription": "This is a series created to share the wonder I felt while learning computer science. Let's follow the process of how small things come together to create a computer!",
    "react": "Become a React Contributor in 2025 (No English translation)",
    "reactDescription": "A series where we become developers who can contribute by reading and analyzing React source code directly. Let's deeply understand the core operating principles of React.js!",
    "viewSeries": "View Series"
  },
  "Curriculum": {
    "dateFormat": "{date, date, long}",
    "plannedDateFormat": "{date, date, long}",
    "part1Title": "Part 1: Building a Computer with Just 0s and 1s",
    "hw1Title": "Why Computers Only Have Two Fingers",
    "hw1Description": "Why do computers use 0s and 1s? Let's find out how these two numbers become the first step in capturing sound, images, and everything we can imagine.",
    "hw2Title": "Computers Are Built on Choosing Between Mom and Dad",
    "hw2Description": "How can a logical rule like 'If it rains when you go out, take an umbrella' actually be implemented as a circuit? Let's see how we can create all the logic circuits in the world with a combination of just three basic gates.",
    "hw3Title": "Turns Out The Computer Didn't Really Like Both Mom and Dad",
    "hw3Description": "How many types of gates do you need to know to build a computer? Let's see how a single gate can be used to construct all digital logic circuits, including AND, OR, and NOT.",
    "hw4Title": "Now You Can Make A Calculator (Seriously)",
    "hw4Description": "Let's use what we've learned so far to build a calculator that's better at addition than we are. If you were stranded on a deserted island with a pile of NAND gates, you wouldn't have to worry about not being able to add.",
    "hw5Title": "Fixing a Computer with Amnesia",
    "hw5Description": "The circuits we've built so far can't remember calculation results at all. Let's see how we can cleverly connect two NOR gates to store information.",
    "hw6Title": "If All It Does Is Math, It's Just a Calculator",
    "hw6Description": "Now that we've made circuits for addition and subtraction, have we built a 'computer'? Let's explore what the essence of a computer is, and how one machine can realize infinite possibilities.",
    "hw7Title": "Von Neumann, Again?",
    "hw7Description": "The idea of storing programs in the same space as data is a simple but powerful idea. Let's explore how this one idea created the basic skeleton of modern computers: CPU, memory, and bus.",
    "hw8Title": "The Billion-Times-a-Second Routine of a CPU",
    "hw8Description": "Instruction Cycle (Fetch-Decode-Execute)",
    "hw9Title": "Mom, It's Not a Mess ‚Äî It's Called Cache!",
    "hw9Description": "Memory Hierarchy",

    "part2Title": "Part 2: Solving Problems Like a Computer",
    "ds1Title": "Can't Clean Your Room? At Least Organize Your Data",
    "ds1Description": "Arrays and Linked Lists",
    "ds2Title": "A Restaurant Where Latecomers Eat First",
    "ds2Description": "Stacks and Queues",
    "ds3Title": "Climbing the Algorithm Social Ladder Is Hard",
    "ds3Description": "Time Complexity",
    "ds4Title": "The Sorting Algorithm Hierarchy",
    "ds4Description": "Bubble, Selection, Insertion, Merge, Quick, Heap Sort",
    "ds5Title": "CS Students Don't Even Know What Trees Look Like",
    "ds5Description": "Trees",
    "ds6Title": "Obsessed with One Thing vs. Can't Focus on Anything",
    "ds6Description": "DFS, BFS",
    "ds7Title": "The Try-Hard That Gets Things Done",
    "ds7Description": "Hash Tables",

    "part3Title": "Part 3: Making Computers More Usable",
    "os1Title": "Born from Devs Who Couldn't Stand Idle CPUs",
    "os1Description": "Background of Operating System's Emergence",
    "os2Title": "Why You Can't Use Everything in Your Own Computer",
    "os2Description": "System Calls",
    "os3Title": "You Learned C, But Your Computer Doesn't Understand It",
    "os3Description": "Compilers",
    "os4Title": "Task Management Tips from a Productive CPU",
    "os4Description": "Processes and Threads",
    "os5Title": "'The Game Is 50GB, Do I Need To Buy 50GB Of RAM?'",
    "os5Description": "Virtual Memory",
    "os6Title": "How This Text Reached You",
    "os6Description": "Network",

    "appendixTitle": "Appendix",
    "appendix1Title": "Building A Computer In Minecraft",

    "comingSoon": "Coming Soon",
    "viewPost": "View Post"
  },
  "NotFound": {
    "backHome": "Back to Home"
  },
  "EmailSubscribe": {
    "title": "Get Notified About New Content üíå",
    "description": "I'll keep you posted as the computer takes shape.",
    "subscriberCount": "Currently {count, number} people subscribed.",
    "subscriberCountHeader": " people joined us!",
    "emailPlaceholder": "Email address",
    "successMessage": "Successfully subscribed!",
    "subscribeButton": "Subscribe",
    "subscribingButton": "Subscribing...",
    "confettiLabel": "Confetti count"
  },
  "Comment": {
    "title": "I'd Love to Hear Your Thoughts",
    "description": "Feel free to share any questions or thoughts that come to mind while reading this series. For example...",
    "example1": "Things you've always wondered about in computer science, like 'Why does this work this way?'",
    "example2": "Concepts that left a lasting impression while studying computer science",
    "example3": "Concepts that everyone says are important, but you're not quite sure why or how they're used",
    "encouragement": "I believe sharing your questions, experiences, and honest challenges will help other readers. I'll keep working to make this a space where we can learn and grow together :)",
    "githubLoginNotice": "* GitHub login is required to prevent spam",
    "loginRequired": "You need to <loginLink>login</loginLink> to leave a comment.",
    "login": "login",
    "placeholder": "Thank you for reading! üëç",
    "submit": "Submit",
    "submitting": "Submitting...",
    "noComments": "Be the first to comment!",
    "loading": "Logging in...",
    "deleteComment": "Delete Comment",
    "deleteConfirm": "Are you sure you want to delete this comment?",
    "deleting": "Deleting...",
    "delete": "Delete",
    "cancel": "Cancel",
    "deleteError": "An error occurred while deleting the comment.",
    "submitError": "An error occurred while submitting the comment.",
    "dateFormat": "MMM DD, YYYY HH:mm:ss",
    "required": "Required field."
  },
  "ZeroAndOne": {
    "PixelateImage": {
      "title": "Image Pixelation",
      "analogLandscape": "Analog Landscape",
      "digitalizedImage": "Digitalized Image",
      "loading": "Loading image...",
      "pixelSize": "Pixel Size"
    },
    "TruthTableDemo": {
      "rainForecast": "Rain Forecast",
      "goingOut": "Going Out",
      "takeUmbrella": "Take Umbrella"
    }
  },
  "PostNavigation": {
    "backToList": "Back to List",
    "prev": "Previous",
    "next": "Next"
  },
  "Sequential": {
    "ClockSyncVisualizer": {
      "reset": "Reset",
      "clockSignal": "Clock Signal"
    },
    "EdgeTriggerDemo": {
      "risingEdge": "Rising Edge",
      "fallingEdge": "Falling Edge",
      "clock": "Clock"
    },
    "CombVsSeq": {
      "cannotRemember": "When it can't remember",
      "canRemember": "When it can remember"
    }
  },
  "TuringMachine": {
    "title": "Turing Machine",
    "ControlUnit": {
      "title": "Control Unit",
      "currentState": "Current State",
      "readSymbol": "Read Symbol",
      "nextState": "Next State",
      "writeSymbol": "Write Symbol",
      "move": "Move"
    },
    "Tape": {
      "title": "Tape",
      "head": "‚ñ≤ Head"
    }
  }
}
